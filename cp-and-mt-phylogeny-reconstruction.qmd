# Species tree reconstruction from organellar genomes

```{r, echo=FALSE, include=FALSE}
# load required libraries
up_packages = c("ape", "circlize", "ComplexHeatmap", "corrplot", "DECIPHER", "dendextend", "doSNOW", "foreach",
                "ggdist", "ggplot2", "ggtree", "gridExtra", "phangorn", "phylogram", "phytools", "reshape",
                "RColorBrewer", "scales", "stringr", "TreeDist", "treeio")
lapply(up_packages, require, character.only = TRUE)

# set working directory
mainDir = "/home/andrea/19ADC99/UlvaOmics"
knitr::opts_knit$set(root.dir = mainDir)

# source custom functions
source("src/utils.R")
```


## On this page

Biological insights and take-home messages are at the bottom of the page at Lesson Learnt: @sec-lesson-learnt-cp-and-mt-phylogeny-reconstruction.

* Here we retrieve Ulva organellar genomes
* we investigate the 


## Reconstruction of Ulva species tree


We will reconstruct the Ulva phylogenetic species tree using a Maximum Likelihood approach with [IQ-TREE](https://doi.org/10.1093/molbev/msaa015), and a coalescence-based one with [ASTRAL](https://doi.org/10.1186/s12859-018-2129-y). We will generate the species tree based on:

* chloroplast only genes
* mitochondrial only genes
* both chloroplast and mitochondrial genes

and we will evaluate the similarities and differences between the reconstructued phylogenies.


### Maximum Likelihodd species tree reconstruction


For the ML approach, the first step consist in concatenating all alignments into a single concatenated file.
We will use [catfasta2phyml](https://github.com/nylander/catfasta2phyml), which also generates a nexus file that is required from IQ-TREE with the coordinates of each gene in the alignment. This allow us to partion the alignment to the gene level and apply different evolution models to different genes. Even if for each organelle all genes are inherited in linkage, the same is not true for the chloroplast and the mitochondrial genome. Moreover, this would allow to model different signals across genes that are under different evolutionary pressures.



```{bash}
#| echo: TRUE
#| eval: FALSE
#| result: hide
#| code-fold: TRUE
#| message: FALSE
#| warning: FALSE

# concatenate alignments
perl ~/bin/catfasta2phyml.pl \
  --fasta \
  --concatenate 07_nt_aln_ready/*.fa \
  > 08_concatenated_ML/clstr.all.concat.nt.align.fa

# ML analysis on concatenated alignment
~/bin/iqtree-1.6.8-Linux/bin/iqtree \
  -s clstr.all.concat.nt.align.fa \
  -st CODON \
  -pre clstr.all.concat.nt.align \
  -nt 52 \
  -wbt \
  -bb 1000 \
  -alrt 1000 \
  -m MG+F1X4

```






### Colescence-based species tree reconstruction

For the coalescence-based approach, first we need to compute the single-gene ML tree.


```{bash}
#| echo: TRUE
#| eval: FALSE
#| result: hide
#| code-fold: TRUE
#| message: FALSE
#| warning: FALSE


```







```{bash, echo=FALSE, include=FALSE, eval=FALSE}



### PHYLOGENY
###
###

# rename sequences
for file in *.fasta; do mv "$(Bates et al)" $(echo $file | sed 's/ alignment.*//g').fa; done


# gene wise Maximum Likelihood phylogeny - CP
for file in ../cp_clean_align/*.fa; do
  ~/bin/iqtree-2.2.0-Linux/bin/iqtree2 -s $file \
    -st DNA \
    -pre $(basename $file .fa) \
    -nt 8 \
    -wbt -bb 1000 -alrt 1000 \
    -m MFP+MERGE’;
done

# gene wise Maximum Likelihood phylogeny - MT
ls ../mt_clean_align/*.fa \
  | grep -v Mt \
  | xargs -P 16 -n 6 -I {} bash -c \
  ‘/mnt/wgs-runs/REFERENCE/bin/iqtree-2.2.0-Linux/bin/iqtree2 -s {} \
    -st DNA \
    -pre $(basename {} .fa) 
    -nt 6 \
    -wbt -bb 1000 -alrt 1000 \
    -m MFP+MERGE’




### create nexus file with best models CP
k=1
START=0
echo "#nexus" >> cp_concat_allgenes_ML/head_noscaffold.nex
echo "begin sets;" >> cp_concat_allgenes_ML/head_noscaffold.nex
echo -n "charpartition mine = " >> cp_concat_allgenes_ML/tail_noscaffold.nex
for file in cp_clean_align/*.fa; do
  LEN=$(awk '/^>/ {if (seqlen){print seqlen}; print ;seqlen=0;next; } \
    { seqlen += length($0)}END{print seqlen}' \
    $file | sed -n 2,2p)
  echo "charset part$k = $(($START+1))-$(($START+$LEN));" \
    >> cp_concat_allgenes_ML/head_noscaffold.nex
  START=$(($START+$LEN))
  MODEL=$(grep "Best-fit model" cp_gene_wise_ML/$(basename $file .fa).log \
    | sed 's/Best-fit model: //g' | sed 's/ chosen according to BIC//g')
  echo -n "$MODEL:part$k ," \
    >> cp_concat_allgenes_ML/tail_noscaffold.nex
  k=$((k+1))
done
echo ";" >> cp_concat_allgenes_ML/tail_noscaffold.nex
echo "end;" >> cp_concat_allgenes_ML/tail_noscaffold.nex
cat cp_concat_allgenes_ML/head_noscaffold.nex \
  cp_concat_allgenes_ML/tail_noscaffold.nex \
  > cp_concat_allgenes_ML/cp_allgenes_concat.nex
rm cp_concat_allgenes_ML/head_noscaffold.nex cp_concat_allgenes_ML/tail_noscaffold.nex
sed -i 's/ ,;/;/g' cp_concat_allgenes_ML/cp_concat_allgenes_ML/cp_allgenes_concat.nex

#### run full ML phylogeny
../bin/iqtree-2.2.0-Linux/bin/iqtree2 -s cp_allgenes_concat.fa \
    -st DNA \
    -pre cp_allgenes_concat \
    -p  cp_allgenes_concat.nex \
    --sampling GENESITE \
    -nt 96 \
    -wbt -bb 1000 -alrt 1000 




k=1; START=0; echo "#nexus" >> mt_concat_allgenes_ML/head_noscaffold.nex; echo "begin sets;" >> mt_concat_allgenes_ML/head_noscaffold.nex; echo -n "charpartition mine = " >> mt_concat_allgenes_ML/tail_noscaffold.nex; for file in mt_clean_align/*.fa; do LEN=$(awk '/^>/ {if (seqlen){print seqlen}; print ;seqlen=0;next; } { seqlen += length($0)}END{print seqlen} ' $file | sed -n 2,2p); echo "charset part$k = $(($START+1))-$(($START+$LEN));" >> mt_concat_allgenes_ML/head_noscaffold.nex; START=$(($START+$LEN)); MODEL=$(grep "Best-fit model" mt_gene_wise_ML/$(basename $file .fa).log | sed 's/Best-fit model: //g' | sed 's/ chosen according to BIC//g'); echo -n "$MODEL:part$k ," >> mt_concat_allgenes_ML/tail_noscaffold.nex; k=$((k+1)); done
echo ";" >> mt_concat_allgenes_ML/tail_noscaffold.nex
echo "end;" >> mt_concat_allgenes_ML/tail_noscaffold.nex
cat mt_concat_allgenes_ML/head_noscaffold.nex \
  mt_concat_allgenes_ML/tail_noscaffold.nex \
  > mt_concat_allgenes_ML/mt_allgenes_concat.nex
rm mt_concat_allgenes_ML/head_noscaffold.nex mt_concat_allgenes_ML/tail_noscaffold.nex
sed -i 's/ ,;/;/g' mt_concat_allgenes_ML/mt_allgenes_concat.nex


../bin/iqtree-2.2.0-Linux/bin/iqtree2 -s mt_allgenes_concat.fa  -st DNA -pre mt_allgenes_concat  -p  mt_allgenes_concat.nex  --sampling GENESITE  -nt 96 -wbt -bb 1000 -alrt 1000 











### ASTRAL TO BUILD COALESCENCE BASED SPECIES TREE
### it takes single gene ML and the corresponding boot strap trees generate byt iqtree


# prepare files
cat cp_gene_wise_ML/*.contree > cp_coalescence/cp_allgenes_single.tre
cat mt_gene_wise_ML/*.contree > mt_coalescence/mt_allgenes_single.tre
cat cp_gene_wise_ML/*.contree mt_gene_wise_ML/*.contree > cp_mt_coalescence/cp_mt_allgenes_single.tre

for file in cp_gene_wise_ML/*.ufboot; do echo $file | sed ‘s#^#/mnt/wgs-runs/REFERENCE/#’; done > cp_coalescence/cp_allgenes_single.BS
for file in mt_gene_wise_ML/*.ufboot; do echo $file | sed ‘s#^#/mnt/wgs-runs/REFERENCE/#’; done > mt_coalescence/mt_allgenes_single.BS
for file in cp_gene_wise_ML/*.ufboot mt_gene_wise_ML/*.ufboot; do echo $file | sed ‘s#^#/mnt/wgs-runs/REFERENCE/#’; done > cp_mt_coalescence/cp_mt_allgenes_single.BS



java -Xmx24000M \
-jar bin/Astral/astral.5.7.8.jar \
--bootstraps cp_coalescence/cp_allgenes_single.BS \
--gene-resampling \
-r 100 \
--input cp_coalescence/cp_allgenes_single.tre \
--output cp_coalescence/cp_allgenes_single.astral.tre 2> \
cp_coalescence/cp_allgenes_single.astral.log
tail -n 1 cp_coalescence/cp_allgenes_single.astral.tre > \
cp_coalescence/cp_allgenes_single.astral.contre

java -Xmx24000M -jar bin/Astral/astral.5.7.8.jar --bootstraps cp_coalescence/cp_allgenes_single.BS --gene-resampling -r 100 --input cp_coalescence/cp_allgenes_single.tre --output cp_coalescence/cp_allgenes_single.astral.tre 2> cp_coalescence/cp_allgenes_single.astral.log

tail -n 1 cp_coalescence/cp_allgenes_single.astral.tre > cp_coalescence/cp_allgenes_single.astral.contre




java -Xmx24000M -jar bin/Astral/astral.5.7.8.jar --bootstraps mt_coalescence/mt_allgenes_single.BS --gene-resampling -r 100 --input mt_coalescence/mt_allgenes_single.tre --output mt_coalescence/mt_allgenes_single.astral.tre 2> mt_coalescence/mt_allgenes_single.astral.log

tail -n 1 mt_coalescence/mt_allgenes_single.astral.tre > mt_coalescence/mt_allgenes_single.astral.contre



java -Xmx24000M -jar bin/Astral/astral.5.7.8.jar --bootstraps cp_mt_coalescence/cp_mt_allgenes_single.BS --gene-resampling -r 100 --input cp_mt_coalescence/cp_mt_allgenes_single.tre --output cp_mt_coalescence/cp_mt_allgenes_single.astral.tre 2> cp_mt_coalescence/cp_mt_allgenes_single.astral.log

tail -n 1 cp_mt_coalescence/cp_mt_allgenes_single.astral.tre > cp_mt_coalescence/cp_mt_allgenes_single.astral.contre





merge cp with mt

 bin/seqkit concat --full cp_concat_allgenes_ML/cp_allgenes_concat.fa mt_concat_allgenes_ML/mt_allgenes_concat.fa > cp_mt_concat_allgenes_ML/cp_mt_allgenes_concat.fa







		python3.10 combinatorial_ML_phylogeny.py --infolder "ANALYSES_AND_RESULTS/
09_combinatorial_phylogeny/00_cp_genes/,ANALYSES_AND_RESULTS/09_combinatorial_phylogeny/00_mt_genes/" --names "CP,MT" --iqtree /home/Andrea/Desktop/ANALYSES_AND_RESULTS/bin/iqtree-2.2.0-Linux/bin/iqtree2 --n_genes 10 --outdir /home/Andrea/Desktop/CP_MT/ANALYSES_AND_RESULTS/09_combinatorial_phylogeny/


```


```{r}
#| echo: FALSE
#| message: FALSE
#| warning: FALSE
#| fig.height: 9
#| fig.cap: "Figure 4: UMAP RNAseq"



      

```



### ML phylogeny


### coalescence based



### distances between reconstructed species trees






### Prognosis Outcome 

Of the 887 petients with kidney tumor, 659 were alive at the time of the last check up, while 228 died. It appears that KIRC patients (48.7% dead) have worse prognosis than KIRP patients (17.9% dead), as observed in the previous comparisons. However, before drawing a formal conclusion, we should validate this observation at least in another independent cohort.





Trees estimated by the ML and coalescent methods were well-supported and congruent, although slightly different topologies were recovered for different methods applied for different datasets (cp, mt and cp+mt) (Fig.1, Fig. S3). For the cp+mt tree, the topology of ML and coalescent trees are mostly congruent. The difference in the topology happens mostly within large species clades, e.g., clade contains U. australis or U. compressa genomes. The notorious difference is the position of U.fene vs. Ulva sp4. The results from the correlation between the common nodes and MAST% are highly concordant. They indicate that the topology of phylogenetic trees constructed by the two methods (ML and coalescence) and different datasets (cp, mt and cp+mt) is highly similar, except for the topology of the mt phylogenetic tree constructed by the ML method (The correlation between the common nodes) and the coalescent method (MAST%). Results from RF and KF matrices are more varied, but both also show the topology of species tree constructed using mt genomes ML is less similar compared to other species trees.



Figure 1. (A). Consensus Ulva species tree based on the (49) concatenated chloroplast and mitochondrial genomes. The colors of circle at each node show the confident level of supporting values (bootstrap value for ML tree and posterior value for coalescence tree). Black circles indicate nodes with at least 95% support while grey circles indicate nodes with support values in the range of 75-95% and white circles indicate nodes with support values less than 75%. The blue lines show the identical topology between ML and coalescence tree while grey lines indicate difference in topology within species and red lines indicate difference in topology between species. (B). Four metrics, namely the correlation between the common nodes (common_nodes_corr), Robinson-Foulds (RF), Kuhner-Felsenstein (KF), and Maximum Agreement Subtree (MAST) used to assess the concordance of the Ulva species tree reconstructed from supermatrix and coalescence-based analyses obtained from the analyses of chloroplast genes, mitochondrial genes and chloroplast and mitochondrial genes. Higher values in correlation between the common_nodes_corr and MAST indicate the higher similarity between topology while lower values in correlation between the RF and KF indicate the higher similarity between topology.






Among the 70 cp genes chosen, the four indices RF, KF, MAST and the correlation between the common nodes metrics pointed out 24 unique cp genes that provide the most similar topology compared to the species tree constructed using 70 genes, namely accD, atpF, chlI, petB, psaA, psaB, psbB, psbD, rpl12, rpl19, rpl2, rpl32, rpoA, rpoB, rpoC1, rpoC2, rps12, rps2, rps4, rps8, rps9, tufA, ycf1, and ycf20 (Table 1). Among them, several genes such as psaA, psaB, and psbB are consistently identified by different matrices. Similarly, the same approach applied to the Ulva species trees reconstructed using mt suggested 19 unique mt genes, namely atp1, atp6, cob, cox1, cox2, cox3, nad2, nad4, nad5, nad7, rpl14, rpl16, rps10, rps11, rps14, rps19, rps2, rps3, and rps4, of which several genes such as atp6, cox1, cox2, rps3, and rps10 are suggested by different indices. Since the Ulva specimens used in this study do not always have both cp and mt genomes, the Ulva species trees reconstructed using cp and mt supermatrix have different set of tips, depending on the availability of the genomes. Prior analyses suggested that MAST% and common correlation nodes metrics are the best performers to assess phylogenetic tree distances when the tree do not have the same set of tips, we then selected (arbitrarily) 10 genes for the combinatorial approach, petB, psaA, psaB, psbB, psbD, rps2, atp6, cox1, cox2, and mt_rps3, based on the top 10 single gene ML trees with topology closest to cp_mt_ML. The first six genes are cp genes while the other four genes are mt genes. 



From the combination of 2 to 10 selected genes, 1,013 species trees were generated (45 species trees for 2 genes, 120 species trees for 3 genes, 210 species trees for 4 genes, 252 species trees for 5 genes,210 species trees for 6 genes, 120 species trees for 7 genes, 45 species trees for 8 genes, 10 species trees for 9 genes and 1 species trees for 10 genes). After filtering for combinations containing both a cp and an mt marker, a total of 945 trees remained, comprising of 24 species trees for 2 genes, 96 species trees for 3 genes, 194 species trees for 4 genes, 246 species trees for 5 genes, 209 species trees for 6 genes, 120 species trees for 7 genes, 45 species trees for 8 genes, 10 species trees for 9 genes, and 1 species trees for 10 genes. For each combination, a representative combination with the highest the MAST% and the common node correlation are shown in the Table 2. The best combination to use for the development of Ulva organellar universal markers should be the combination with the highest values of the two indices and the lowest number of markers in the combination. The combination with five to eight markers has the highest value for the MAST% and the highest value for the common node correlation, but given the number of markers, it might pose more challenges for the development process later. The combination with four markers, psbD, psaA, cox1, cox2, which also has the highest value for the MAST% and has the value for the common node correlation slightly lower than the highest value, is chosen for the next step. This combination comprises of two cp genes, psbD, psaA, and two mt genes, cox1, cox2.



## Lessons Learnt {#sec-lesson-learnt-cp-and-mt-phylogeny-reconstruction}
So far, we have learnt:

* TCGA is a public resource with a wide collection of samples from cancer biopsies from patients affected by 32 different cancer types.
* TCGA provides abundant molecular and clinical information for both biopsies and patients and it allows for patient stratification and therapeutic target discovery.
* Cancers with kidneys as primary sites are the third most abundant samples available in TCGA (n = 1,030 samples), after breast (n = 1,246) and lung biopsies (n = 1,156), and provides an excellent yet challenging case-study.




## Session Information

:::{.callout-note collapse=true}

```{r, echo=FALSE}
utils::sessionInfo()
```

:::
